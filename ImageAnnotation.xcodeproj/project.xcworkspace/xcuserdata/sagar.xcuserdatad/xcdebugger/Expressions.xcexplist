<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "ImageAnnotation.drawing.drawRect (ImageAnnotation.drawing)(C.CGRect) -&gt; ():drawing.swift">
         <PersistentStrings>
            <PersistentString
               value = "textField?.textColor">
            </PersistentString>
            <PersistentString
               value = "circle_obj">
            </PersistentString>
            <PersistentString
               value = "circles">
            </PersistentString>
            <PersistentString
               value = "objTextField?.color">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.ViewController.sideRotationAction (ImageAnnotation.ViewController)(ObjectiveC.UIButton) -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "rotationUndo">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.ViewController.viewDidLoad (ImageAnnotation.ViewController)() -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.frameView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.drawing.removeLastLine (ImageAnnotation.drawing)() -&gt; ():drawing.swift">
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.ViewController.DoneAction (ImageAnnotation.ViewController)(Swift.AnyObject) -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "imageView.image">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.drawing.touchesEnded (ImageAnnotation.drawing)(ObjectiveC.NSSet, withEvent : ObjectiveC.UIEvent) -&gt; ():drawing.swift">
         <PersistentStrings>
            <PersistentString
               value = "strokes">
            </PersistentString>
            <PersistentString
               value = "lines">
            </PersistentString>
            <PersistentString
               value = "arrayIndex">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.drawing.touchesBegan (ImageAnnotation.drawing)(ObjectiveC.NSSet, withEvent : ObjectiveC.UIEvent) -&gt; ():drawing.swift">
         <PersistentStrings>
            <PersistentString
               value = "l_w">
            </PersistentString>
            <PersistentString
               value = "drawColor">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.ViewController.redoAction (ImageAnnotation.ViewController)(Swift.AnyObject) -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "drawView.lastLineDraw.count">
            </PersistentString>
            <PersistentString
               value = "drawView.redoArray.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.ViewController.lineWidthTapped (ImageAnnotation.ViewController)(Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.UIButton&gt;) -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "drawView.circle_obj.first!.l_width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.drawing.touchesMoved (ImageAnnotation.drawing)(ObjectiveC.NSSet, withEvent : ObjectiveC.UIEvent) -&gt; ():drawing.swift">
         <PersistentStrings>
            <PersistentString
               value = "arrayIndex">
            </PersistentString>
            <PersistentString
               value = "totalLines">
            </PersistentString>
            <PersistentString
               value = "lines">
            </PersistentString>
            <PersistentString
               value = "strokes">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.ViewController.keyboardWillShow (ImageAnnotation.ViewController)(ObjectiveC.NSNotification) -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "resultViewTopConstraint.constant">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.ViewController.imagePickerController (ImageAnnotation.ViewController)(Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.UIImagePickerController&gt;, didFinishPickingMediaWithInfo : Swift.ImplicitlyUnwrappedOptional&lt;Swift.Dictionary&lt;ObjectiveC.NSObject, Swift.AnyObject&gt;&gt;) -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "imageView.frame">
            </PersistentString>
            <PersistentString
               value = "scaleFactor">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.ViewController.colorTapped (ImageAnnotation.ViewController)(Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.UIButton&gt;) -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "drawView.circle_obj.first?.color">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImageAnnotation.ViewController.undoAction (ImageAnnotation.ViewController)(Swift.AnyObject) -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "arrayIndex">
            </PersistentString>
            <PersistentString
               value = "lastLineDraw[i]">
            </PersistentString>
            <PersistentString
               value = "rotationUndo">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
